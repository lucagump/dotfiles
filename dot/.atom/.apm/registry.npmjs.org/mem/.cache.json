{"_id":"mem","_rev":"23-a72e1f8bf35987f303319476858bc30d","name":"mem","description":"Memoize functions - An optimization used to speed up consecutive function calls by caching the result of calls with identical input","dist-tags":{"latest":"4.0.0"},"versions":{"0.1.0":{"name":"mem","version":"0.1.0","description":"Memoize functions - an optimization technique used to speed up consecutive function calls by caching the result of calls with identical inputs","license":"MIT","repository":{"type":"git","url":"https://github.com/sindresorhus/mem"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=0.10.0"},"scripts":{"test":"xo && ava"},"files":["index.js"],"keywords":["memoize","function","mem","memoization","cache","caching","optimize","performance","ttl","expire","promise"],"devDependencies":{"ava":"*","delay":"^1.1.0","xo":"*"},"gitHead":"863a48adf8f83437383cdb3422a7c5d84f01654a","bugs":{"url":"https://github.com/sindresorhus/mem/issues"},"homepage":"https://github.com/sindresorhus/mem","_id":"mem@0.1.0","_shasum":"8aeb2b7a43e44d74c5cbbf5397e22255c747a5c2","_from":".","_npmVersion":"2.14.7","_nodeVersion":"4.2.1","_npmUser":{"name":"sindresorhus","email":"sindresorhus@gmail.com"},"dist":{"shasum":"8aeb2b7a43e44d74c5cbbf5397e22255c747a5c2","tarball":"https://registry.npmjs.org/mem/-/mem-0.1.0.tgz"},"maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"directories":{}},"0.1.1":{"name":"mem","version":"0.1.1","description":"Memoize functions - An optimization used to speed up consecutive function calls by caching the result of calls with identical input","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/mem.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=0.10.0"},"scripts":{"test":"xo && ava"},"files":["index.js"],"keywords":["memoize","function","mem","memoization","cache","caching","optimize","performance","ttl","expire","promise"],"devDependencies":{"ava":"*","delay":"^1.1.0","xo":"*"},"gitHead":"65d4ab7fb3b43b71b3c968eff65329c8ebb3eee8","bugs":{"url":"https://github.com/sindresorhus/mem/issues"},"homepage":"https://github.com/sindresorhus/mem#readme","_id":"mem@0.1.1","_shasum":"24df988c3102b03c074c1b296239c5b2e6647825","_from":".","_npmVersion":"3.7.0","_nodeVersion":"4.2.4","_npmUser":{"name":"sindresorhus","email":"sindresorhus@gmail.com"},"dist":{"shasum":"24df988c3102b03c074c1b296239c5b2e6647825","tarball":"https://registry.npmjs.org/mem/-/mem-0.1.1.tgz"},"maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"_npmOperationalInternal":{"host":"packages-9-west.internal.npmjs.com","tmp":"tmp/mem-0.1.1.tgz_1454428396859_0.8970216677989811"},"directories":{}},"1.0.0":{"name":"mem","version":"1.0.0","description":"Memoize functions - An optimization used to speed up consecutive function calls by caching the result of calls with identical input","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/mem.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=4"},"scripts":{"test":"xo && ava"},"files":["index.js"],"keywords":["memoize","function","mem","memoization","cache","caching","optimize","performance","ttl","expire","promise"],"dependencies":{"mimic-fn":"^1.0.0"},"devDependencies":{"ava":"*","delay":"^1.1.0","xo":"*"},"xo":{"esnext":true},"gitHead":"2d45828833f4ab36d60d87a4b5b8032c822b2f22","bugs":{"url":"https://github.com/sindresorhus/mem/issues"},"homepage":"https://github.com/sindresorhus/mem#readme","_id":"mem@1.0.0","_shasum":"cb8ca87e412dd14b68c8439069c6ee0f51ee99db","_from":".","_npmVersion":"2.15.9","_nodeVersion":"4.6.0","_npmUser":{"name":"sindresorhus","email":"sindresorhus@gmail.com"},"dist":{"shasum":"cb8ca87e412dd14b68c8439069c6ee0f51ee99db","tarball":"https://registry.npmjs.org/mem/-/mem-1.0.0.tgz"},"maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/mem-1.0.0.tgz_1476898471266_0.8245243555866182"},"directories":{}},"1.1.0":{"name":"mem","version":"1.1.0","description":"Memoize functions - An optimization used to speed up consecutive function calls by caching the result of calls with identical input","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/mem.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=4"},"scripts":{"test":"xo && ava"},"files":["index.js"],"keywords":["memoize","function","mem","memoization","cache","caching","optimize","performance","ttl","expire","promise"],"dependencies":{"mimic-fn":"^1.0.0"},"devDependencies":{"ava":"*","delay":"^1.1.0","xo":"*"},"xo":{"esnext":true},"gitHead":"c12270441fab7f42fe53cf97edd53c60c4a8268f","bugs":{"url":"https://github.com/sindresorhus/mem/issues"},"homepage":"https://github.com/sindresorhus/mem#readme","_id":"mem@1.1.0","_shasum":"5edd52b485ca1d900fe64895505399a0dfa45f76","_from":".","_npmVersion":"2.15.9","_nodeVersion":"4.6.0","_npmUser":{"name":"sindresorhus","email":"sindresorhus@gmail.com"},"dist":{"shasum":"5edd52b485ca1d900fe64895505399a0dfa45f76","tarball":"https://registry.npmjs.org/mem/-/mem-1.1.0.tgz"},"maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/mem-1.1.0.tgz_1476900325889_0.8028518599458039"},"directories":{}},"2.0.0":{"name":"mem","version":"2.0.0","description":"Memoize functions - An optimization used to speed up consecutive function calls by caching the result of calls with identical input","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/mem.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=4"},"scripts":{"test":"xo && ava"},"files":["index.js"],"keywords":["memoize","function","mem","memoization","cache","caching","optimize","performance","ttl","expire","promise"],"dependencies":{"mimic-fn":"^1.0.0","p-is-promise":"^1.1.0"},"devDependencies":{"ava":"*","delay":"^2.0.0","xo":"*"},"gitHead":"009ce6a634d1f0d0a6cb0c93d1f59a17b8d6b2ed","bugs":{"url":"https://github.com/sindresorhus/mem/issues"},"homepage":"https://github.com/sindresorhus/mem#readme","_id":"mem@2.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.5.0","_npmUser":{"name":"sindresorhus","email":"sindresorhus@gmail.com"},"dist":{"integrity":"sha512-pbTjCfxCF9hnnypsdhIt6UWLYOfyigFGxyoy2iE+mj/VVde/HUUlbCwj/Ww6bIoFwjnFvyFQpiAUUWjH5mfLFw==","shasum":"37b692533f101bec274c81a76c7bf4cd57fda89f","tarball":"https://registry.npmjs.org/mem/-/mem-2.0.0.tgz"},"maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/mem-2.0.0.tgz_1506321128100_0.6689927573315799"},"directories":{}},"3.0.0":{"name":"mem","version":"3.0.0","description":"Memoize functions - An optimization used to speed up consecutive function calls by caching the result of calls with identical input","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/mem.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=4"},"scripts":{"test":"xo && ava"},"files":["index.js"],"keywords":["memoize","function","mem","memoization","cache","caching","optimize","performance","ttl","expire","promise"],"dependencies":{"mimic-fn":"^1.0.0","p-is-promise":"^1.1.0"},"devDependencies":{"ava":"*","delay":"^2.0.0","xo":"*"},"gitHead":"74439cc052c3bec1ec18b312f8913011dc262ed7","bugs":{"url":"https://github.com/sindresorhus/mem/issues"},"homepage":"https://github.com/sindresorhus/mem#readme","_id":"mem@3.0.0","_shasum":"84e58ad4dfbdf5d105b26b6548a398b2b3aa8a21","_from":".","_npmVersion":"2.15.11","_nodeVersion":"4.8.3","_npmUser":{"name":"sindresorhus","email":"sindresorhus@gmail.com"},"dist":{"shasum":"84e58ad4dfbdf5d105b26b6548a398b2b3aa8a21","tarball":"https://registry.npmjs.org/mem/-/mem-3.0.0.tgz"},"maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/mem-3.0.0.tgz_1507737373888_0.41107727540656924"},"directories":{}},"3.0.1":{"name":"mem","version":"3.0.1","description":"Memoize functions - An optimization used to speed up consecutive function calls by caching the result of calls with identical input","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/mem.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=4"},"scripts":{"test":"xo && ava"},"files":["index.js"],"keywords":["memoize","function","mem","memoization","cache","caching","optimize","performance","ttl","expire","promise"],"dependencies":{"mimic-fn":"^1.0.0","p-is-promise":"^1.1.0"},"devDependencies":{"ava":"*","delay":"^2.0.0","xo":"*"},"gitHead":"16ff264ad0b1b7a2bfb8b8003dab2dc27c4d89d1","bugs":{"url":"https://github.com/sindresorhus/mem/issues"},"homepage":"https://github.com/sindresorhus/mem#readme","_id":"mem@3.0.1","_npmVersion":"5.6.0","_nodeVersion":"8.11.2","_npmUser":{"name":"sindresorhus","email":"sindresorhus@gmail.com"},"dist":{"integrity":"sha512-QKs47bslvOE0NbXOqG6lMxn6Bk0Iuw0vfrIeLykmQle2LkCw1p48dZDdzE+D88b/xqRJcZGcMNeDvSVma+NuIQ==","shasum":"152410d0d7e835e4a4363e626238d9e5be3d6f5a","tarball":"https://registry.npmjs.org/mem/-/mem-3.0.1.tgz","fileCount":4,"unpackedSize":6622,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbKfZLCRA9TVsSAnZWagAA3UMP/19078JzW0g3A7kvikvK\nimhC+gJF3/+nRe/VFJ6uArsgrIpfSXLG/Qrth82B6UuHZXbGLgUAuwyFmtri\nQZ7pbE5gtAYAp30FxRjGf1sO0nbhNw4gZ34wbQ9rGIFFQOGoyun0FCW6KH+r\nOTT224SD78XjgEo2PXmb9lUI0VaSvoFqwqd+dHdaTkY6EelJqjVnpWK0QWiN\nFl88ojjbVGuh5viGkKsXNLlTzs9Fu0cB9OyZ+KkhRHfbXL7UzwDn611/EfdP\nnQBTyyie3B633IGotn8vOqZHmTFsL9mnvNMmEs9wmz6wzvN5uea3gof7l6Xf\nB2T3QgyvX1t+GbB5o8zwbXEHO65DZqIGvEeXrBgPSeqas/2Qcjz0f81MMYSI\nF6ADTlm6ixfhmHYgwpATPUjDqkQ36Mf+VrlhQVhpl4cA+XTNm7NpDmhr/A/C\nCXVYV5ctIExI20Wf/6bDCESlYsxDguqKoHUwnnXWn/oOwg4sYcbWFr8rLNHX\nZR5xl+PXcMJck8TkO+5cSsGU2r/Y6bAKQd9epD4tGI3JX4vz7k5AS4cazdIU\neuSkNLV+hCRXkw7YQzHH/OxhMOoMCfxGjmffzXqYdQI22ZAtAd0KvmemuvQu\ncPABZGCT/SFgcFKFbfeSi2yr3nN5MHnM3h4AhxG0MOYhPfpX62e3mM6durDQ\nWiMm\r\n=0ozy\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/mem_3.0.1_1529476682375_0.6427172635818768"}},"4.0.0":{"name":"mem","version":"4.0.0","description":"Memoize functions - An optimization used to speed up consecutive function calls by caching the result of calls with identical input","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/mem.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"engines":{"node":">=6"},"scripts":{"test":"xo && ava"},"files":["index.js"],"keywords":["memoize","function","mem","memoization","cache","caching","optimize","performance","ttl","expire","promise"],"dependencies":{"map-age-cleaner":"^0.1.1","mimic-fn":"^1.0.0","p-is-promise":"^1.1.0"},"devDependencies":{"ava":"*","delay":"^3.0.0","xo":"*"},"gitHead":"159369f78b3dc80b72c999e11ba1b350376cc3e4","bugs":{"url":"https://github.com/sindresorhus/mem/issues"},"homepage":"https://github.com/sindresorhus/mem#readme","_id":"mem@4.0.0","_npmVersion":"5.6.0","_nodeVersion":"8.11.4","_npmUser":{"name":"sindresorhus","email":"sindresorhus@gmail.com"},"dist":{"integrity":"sha512-WQxG/5xYc3tMbYLXoXPm81ET2WDULiU5FxbuIoNbJqLOOI8zehXFdZuiUEgfdrU2mVB1pxBZUGlYORSrpuJreA==","shasum":"6437690d9471678f6cc83659c00cbafcd6b0cdaf","tarball":"https://registry.npmjs.org/mem/-/mem-4.0.0.tgz","fileCount":4,"unpackedSize":6886,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbhDXzCRA9TVsSAnZWagAAuogP/0BeGsvg/qP/EEHQAJxP\nPiIfi0gi6nP5qtX0dDqjKJALBYsFoRXJx9gFGr3MiyzQTGHulnSUBopmN/Um\nXBTeTw3jm97scLC71ozFIZRAUC9QFUs0j6RtRYNPghT6NgstB0sZZjMNASp5\nAepb4bOCNhb/j81EkMfNrGtFeOvq2/fzxnkwEbK581hWewCzLcH4E4our4Aq\nVfMvV/wTss9BNhAgM5GbhNOhr9ys1h2dThmjTkATlZE+lkULCAYYydA1spXM\nONTW+RjoCLjwjZ4xlSiPpy9y0AWhSSldXAqd7JByVHuRLCfw5mbBYJ96tgpy\nAP+nU41+SeiQRTV327Jjqie//D7s40CYqIlDXntUPsVNmO87qwNYxQ0HyYKP\n0+SN1Rhv4YhIUn0xtwHASUZR/O4q7cWD3VabeTA3wMGP2kbqV7XXVs9haqjj\n58XhT7euHZMetI6aUlkOPVP1gEG4yRy5E1HbtDfEC9fntIeH6WzyAvq6zrGT\nl4A/xBqT1wVdmbulnIx/32NnFNbZlmcse3dZv9R2vYp4Rn1fg0mXh7W4HRyu\nlS41J2yGxLdcUSfSFe//9kJn4kI9yQ7hBp00BVUTcXmZub2gUj45AazrVvRc\nKzs/a9Vxvu5JcDHTKO5H8LnNSclq3IEWLQXd8l4LvtzH7B7rtBdQUYJH2wn9\nxi+s\r\n=Fhi4\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/mem_4.0.0_1535391218283_0.18788295308356084"}}},"readme":"# mem [![Build Status](https://travis-ci.org/sindresorhus/mem.svg?branch=master)](https://travis-ci.org/sindresorhus/mem)\n\n> [Memoize](https://en.wikipedia.org/wiki/Memoization) functions - An optimization used to speed up consecutive function calls by caching the result of calls with identical input\n\nMemory is automatically released when an item expires.\n\n\n## Install\n\n```\n$ npm install mem\n```\n\n\n## Usage\n\n```js\nconst mem = require('mem');\n\nlet i = 0;\nconst counter = () => ++i;\nconst memoized = mem(counter);\n\nmemoized('foo');\n//=> 1\n\n// Cached as it's the same arguments\nmemoized('foo');\n//=> 1\n\n// Not cached anymore as the arguments changed\nmemoized('bar');\n//=> 2\n\nmemoized('bar');\n//=> 2\n```\n\n##### Works fine with promise returning functions\n\n```js\nconst mem = require('mem');\n\nlet i = 0;\nconst counter = async () => ++i;\nconst memoized = mem(counter);\n\n(async () => {\n\tconsole.log(await memoized());\n\t//=> 1\n\n\t// The return value didn't increase as it's cached\n\tconsole.log(await memoized());\n\t//=> 1\n})();\n```\n\n```js\nconst mem = require('mem');\nconst got = require('got');\nconst delay = require('delay');\n\nconst memGot = mem(got, {maxAge: 1000});\n\n(async () => {\n\tawait memGot('sindresorhus.com');\n\n\t// This call is cached\n\tawait memGot('sindresorhus.com');\n\n\tawait delay(2000);\n\n\t// This call is not cached as the cache has expired\n\tawait memGot('sindresorhus.com');\n})();\n```\n\n\n## API\n\n### mem(fn, [options])\n\n#### fn\n\nType: `Function`\n\nFunction to be memoized.\n\n#### options\n\nType: `Object`\n\n##### maxAge\n\nType: `number`<br>\nDefault: `Infinity`\n\nMilliseconds until the cache expires.\n\n##### cacheKey\n\nType: `Function`\n\nDetermines the cache key for storing the result based on the function arguments. By default, if there's only one argument and it's a [primitive](https://developer.mozilla.org/en-US/docs/Glossary/Primitive), it's used directly as a key, otherwise it's all the function arguments JSON stringified as an array.\n\nYou could for example change it to only cache on the first argument `x => JSON.stringify(x)`.\n\n##### cache\n\nType: `Object`<br>\nDefault: `new Map()`\n\nUse a different cache storage. Must implement the following methods: `.has(key)`, `.get(key)`, `.set(key, value)`, `.delete(key)`, and optionally `.clear()`. You could for example use a `WeakMap` instead or [`quick-lru`](https://github.com/sindresorhus/quick-lru) for a LRU cache.\n\n##### cachePromiseRejection\n\nType: `boolean`<br>\nDefault: `false`\n\nCache rejected promises.\n\n### mem.clear(fn)\n\nClear all cached data of a memoized function.\n\n#### fn\n\nType: `Function`\n\nMemoized function.\n\n\n## Tips\n\n### Cache statistics\n\nIf you want to know how many times your cache had a hit or a miss, you can make use of [stats-map](https://github.com/SamVerschueren/stats-map) as a replacement for the default cache.\n\n#### Example\n\n```js\nconst mem = require('mem');\nconst StatsMap = require('stats-map');\nconst got = require('got');\n\nconst cache = new StatsMap();\nconst memGot = mem(got, {cache});\n\n(async () => {\n\tawait memGot('sindresorhus.com');\n\tawait memGot('sindresorhus.com');\n\tawait memGot('sindresorhus.com');\n\n\tconsole.log(cache.stats);\n\t//=> {hits: 2, misses: 1}\n})();\n```\n\n\n## Related\n\n- [p-memoize](https://github.com/sindresorhus/p-memoize) - Memoize promise-returning & async functions\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n","maintainers":[{"name":"sindresorhus","email":"sindresorhus@gmail.com"}],"time":{"modified":"2018-08-27T17:33:41.257Z","created":"2013-01-22T23:16:13.120Z","0.0.1":"2013-01-22T23:16:15.354Z","0.1.0":"2015-12-21T18:44:14.279Z","0.1.1":"2016-02-02T15:53:17.433Z","1.0.0":"2016-10-19T17:34:31.486Z","1.1.0":"2016-10-19T18:05:26.119Z","2.0.0":"2017-09-25T06:32:08.213Z","3.0.0":"2017-10-11T15:56:14.080Z","3.0.1":"2018-06-20T06:38:02.452Z","4.0.0":"2018-08-27T17:33:38.386Z"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"repository":{"type":"git","url":"git+https://github.com/sindresorhus/mem.git"},"keywords":["memoize","function","mem","memoization","cache","caching","optimize","performance","ttl","expire","promise"],"readmeFilename":"readme.md","homepage":"https://github.com/sindresorhus/mem#readme","bugs":{"url":"https://github.com/sindresorhus/mem/issues"},"license":"MIT","users":{"antixrist":true,"psychollama":true,"quocnguyen":true,"sasquatch":true,"joelwallis":true,"pldin601":true,"cr8tiv":true,"daniel-zahariev":true,"xch":true},"_attachments":{},"_etag":"W/\"3481a115138c70d34c3c0700809391fc\"","_lastModified":"Mon, 27 Aug 2018 17:33:42 GMT"}